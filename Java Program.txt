import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class MainProgram {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // A. Shuffle an array of values
        int[] array = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(array);

        System.out.print("Shuffled array: ");
        for (int value : array) {
            System.out.print(value + " ");
        }
        System.out.println();

        // B. Convert a Roman numeral to an integer
        System.out.print("Enter a Roman numeral: ");
        String romanNumeral = scanner.nextLine();
        int integerResult = romanToInteger(romanNumeral);
        System.out.println("The integer value of " + romanNumeral + " is " + integerResult);

        // C. Check if a sentence is a pangram
        System.out.print("Enter a sentence: ");
        String inputSentence = scanner.nextLine();
        boolean isPangram = isPangram(inputSentence);

        if (isPangram) {
            System.out.println("The sentence is a pangram.");
        } else {
            System.out.println("The sentence is not a pangram.");
        }
    }

    // A. Shuffle an array of values (Fisher-Yates shuffle algorithm)
    public static void shuffleArray(int[] array) {
        Random random = new Random();

        for (int i = array.length - 1; i > 0; i--) {
            int j = random.nextInt(i + 1);
            int temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }

    // B. Convert a Roman numeral to an integer
    public static int romanToInteger(String romanNumeral) {
        int result = 0;
        int prevValue = 0;

        for (int i = romanNumeral.length() - 1; i >= 0; i--) {
            int value = romanNumeralToValue(romanNumeral.charAt(i));
            if (value < prevValue) {
                result -= value;
            } else {
                result += value;
            }
            prevValue = value;
        }

        return result;
    }

    public static int romanNumeralToValue(char numeral) {
        switch (numeral) {
            case 'I':
                return 1;
            case 'V':
                return 5;
            case 'X':
                return 10;
            case 'L':
                return 50;
            case 'C':
                return 100;
            case 'D':
                return 500;
            case 'M':
                return 1000;
            default:
                return 0;
        }
    }

    // C. Check if a sentence is a pangram
    public static boolean isPangram(String sentence) {
        boolean[] alphabet = new boolean[26];

        for (int i = 0; i < sentence.length(); i++) {
            char c = sentence.charAt(i);
            if (c >= 'A' && c <= 'Z') {
                c = (char)(c - 'A' + 'a');  // Convert to lowercase
            }
            if (c >= 'a' && c <= 'z') {
                alphabet[c - 'a'] = true;
            }
        }

        for (boolean letter : alphabet) {
            if (!letter) {
                return false;
            }
        }

        return true;
    }
}
